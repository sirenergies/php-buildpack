#!/usr/bin/env bash

source "$( pwd )/test/utils"
source "$( pwd )/test/helpers"

# List of modules that we want to ship with every PHP setup.
# For now, users can't specify a version for these modules, we just ship
# what we have. Hence no specific versions constraints here.
readonly default_modules=(
    "apcu" "bcmath" "bz2" "Core" "ctype" "curl" "date" "dom" "exif" "fileinfo"
    "filter" "gd" "hash" "iconv" "intl" "json" "libxml" "mbstring" "mongodb"
    "mysqli" "mysqlnd" "openssl" "pcntl" "pcre" "PDO" "pdo_mysql" "pdo_pgsql"
    "pdo_sqlite" "pgsql" "Phar" "posix" "readline" "redis" "Reflection"
    "session" "shmop" "SimpleXML" "soap" "sockets" "SPL" "sqlite3" "standard"
    "tokenizer" "xml" "xmlreader" "xmlwriter" "xsl" "Zend OPcache" "zip" "zlib"
)


test::classic::defaults() {
    # Test a deployment of a classic app (not using Composer)
    # With default settings

    test::utils::setupFixture "classic_default"
    test::helpers::deploy "PHP (classic)" "8.1."
}

test::classic::php80() {
    # Test a deployment of a classic app (not using Composer)
    # Specifying we want PHP 8.0.x via environment

    PHP_VERSION="8.0"
    export PHP_VERSION

    # PHP 8.0 is only available on stack `scalingo-20`:
    if [[ "${STACK}" != "scalingo-20" ]]; then
        echo "[skipping] PHP 8.0 is not available on scalingo-22"
        startSkipping
    fi

    test::utils::setupFixture "classic_default"
    test::helpers::deploy "PHP (classic)" "8.0."
}

test::classic::php81() {
    # Test a deployment of a classic app (not using Composer)
    # Specifying we want PHP 8.1.x via environment

    PHP_VERSION="8.1"
    export PHP_VERSION

    test::utils::setupFixture "classic_default"
    test::helpers::deploy "PHP (classic)" "8.1."
}

test::classic::php82() {
    # Test a deployment of a classic app (not using Composer)
    # Specifying we want PHP 8.2.x via environment

    PHP_VERSION="8.2"
    export PHP_VERSION

    test::utils::setupFixture "classic_default"
    test::helpers::deploy "PHP (classic)" "8.2."
}

test::classic::php83() {
    # Test a deployment of a classic app (not using Composer)
    # Specifying we want PHP 8.3.x via environment

    PHP_VERSION="8.3"
    export PHP_VERSION

    test::utils::setupFixture "classic_default"
    test::helpers::deploy "PHP (classic)" "8.3."
}

test::composer::defaults() {
    # Test a deployment of a PHP app using Composer
    # With default settings

    test::utils::setupFixture "composer_default"
    test::helpers::deploy "PHP (composer.json)" "8.1."
}

test::composer::php80() {
    # Test a deployment of a PHP app using Composer
    # Specifying we want PHP 8.0.x in composer.json

    # PHP 8.0 is only available on stack `scalingo-20`:
    if [[ "${STACK}" != "scalingo-20" ]]; then
        echo "[skipping] PHP 8.0 is not available on scalingo-22"
        startSkipping
    fi

    test::utils::setupFixture "composer_php80"
    test::helpers::deploy "PHP (composer.json)" "8.0."
}

test::composer::php81() {
    # Test a deployment of a PHP app using Composer
    # Specifying we want PHP 8.1.x in composer.json

    test::utils::setupFixture "composer_php81"
    test::helpers::deploy "PHP (composer.json)" "8.1."
}

test::composer::php82() {
    # Test a deployment of a PHP app using Composer
    # Specifying we want PHP 8.2.x in composer.json

    test::utils::setupFixture "composer_php82"
    test::helpers::deploy "PHP (composer.json)" "8.2."
}

test::composer::php83() {
    # Test a deployment of a PHP app using Composer
    # Specifying we want PHP 8.3.x in composer.json

    test::utils::setupFixture "composer_php83"
    test::helpers::deploy "PHP (composer.json)" "8.3."
}

test::composer::php_version_defaults() {
    # Test a deployment of a PHP app using Composer
    # Where the PHP version requirement is only specified in PHP_VERSION.

    PHP_VERSION="8.3"
    export PHP_VERSION

    test::utils::setupFixture "composer_default"
    test::helpers::compile "8.3."
}

test::composer::php_version_greater_than_env() {
    # Test a deployment of a PHP app using Composer
    # Where the PHP version requirement is specified in both composer.json
    # and PHP_VERSION.
    # And where the version specified in composer.json is greater than the one
    # specified in PHP_VERSION.

    PHP_VERSION="8.2"
    export PHP_VERSION

    test::utils::setupFixture "composer_php83"
    test::helpers::compile "8.3."
}

test::composer::php_version_lower_than_env() {
    # Test a deployment of a PHP app using Composer
    # Where PHP version requirement is specified in both composer.json
    # and PHP_VERSION.
    # And where the version specified in composer.json is lower than the one
    # specified in PHP_VERSION.

    PHP_VERSION="8.3"
    export PHP_VERSION

    test::utils::setupFixture "composer_php82"
    test::helpers::compile "8.2."
}


# Add these functions to the test suite:

suite_addTest test::classic::defaults
suite_addTest test::classic::php80
suite_addTest test::classic::php81
suite_addTest test::classic::php82
suite_addTest test::classic::php83

suite_addTest test::composer::defaults
suite_addTest test::composer::php80
suite_addTest test::composer::php81
suite_addTest test::composer::php82
suite_addTest test::composer::php83

suite_addTest test::composer::php_version_defaults
suite_addTest test::composer::php_version_greater_than_env
suite_addTest test::composer::php_version_lower_than_env

